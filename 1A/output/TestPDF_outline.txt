OUTLINE FOR: TestPDF.pdf
==================================================

TestPDF (Page 1)
  Welcome to the “Connecting the Dots” Challenge (Page 1)
    Rethink Reading. Rediscover Knowledge (Page 1)
    What if every time you opened a PDF, it didn’t just sit there—it spoke to you, (Page 1)
    connected ideas, and narrated meaning across your entire library? (Page 1)
    That’s the future we’re building — and we want you to help shape it. (Page 1)
    In the Connecting the Dots Challenge, your mission is to reimagine the humble (Page 1)
    PDF as an intelligent, interactive experience—one that understands structure, (Page 1)
    surfaces insights, and responds to you like a trusted research companion. (Page 1)
    The Journey Ahead (Page 1)
      • Round 1: (Page 1)
    Kick things off by building the brains — extract structured outlines from (Page 1)
    raw PDFs with blazing speed and pinpoint accuracy. Then, power it up (Page 1)
    with on-device intelligence that understands sections and links related (Page 1)
    ideas together. (Page 1)
      • Round 2: (Page 1)
    It’s showtime! Build a beautiful, intuitive reading webapp using Adobe’s (Page 1)
    PDF Embed API. You will be using your Round 1 work to design a (Page 1)
    futuristic webapp. (Page 1)
    Why This Matters (Page 1)
    In a world flooded with documents, what wins is not more content — it’s (Page 1)
    context. You’re not just building tools — you’re building the future of how we (Page 1)
    read, learn, and connect. No matter your background — ML hacker, UI builder, (Page 1)
    or insight whisperer — this is your stage. (Page 1)
    Are you in? (Page 1)
    It’s time to read between the lines. Connect the dots. And build a PDF (Page 1)
    experience that feels like magic. Let’s go. (Page 1)
  Round 1A: Understand Your Document (Page 2)
    Challenge Theme: Connecting the Dots Through Docs (Page 2)
    Your Mission (Page 2)
    You're handed a PDF — but instead of simply reading it, you're tasked with (Page 2)
    making sense of it like a machine would. Your job is to extract a structured (Page 2)
    outline of the document — essentially the Title, and headings like H1, H2, and (Page 2)
    H3 — in a clean, hierarchical format. (Page 2)
    This outline will be the foundation for the rest of your hackathon journey. (Page 2)
    PDFs are everywhere — but machines don’t naturally understand their (Page 2)
    structure. By building an outline extractor, you’re enabling smarter document (Page 2)
    experiences, like semantic search, recommendation systems, and insight (Page 2)
    generation. (Page 2)
    What You Need to Build (Page 2)
    You must build a solution that: (Page 2)
      • Accepts a PDF file (up to 50 pages) (Page 2)
      • Extracts: (Page 2)
      o Title (Page 2)
      o Headings: H1, H2, H3 (with level and page number) (Page 2)
      • Outputs a valid JSON file in the format below: (Page 2)
    "title": "Understanding AI", (Page 2)
    "outline": [ (Page 2)
    { "level": "H1", "text": "Introduction", "page": 1 }, (Page 2)
    { "level": "H2", "text": "What is AI?", "page": 2 }, (Page 2)
    { "level": "H3", "text": "History of AI", "page": 3 } (Page 2)
    You Will Be Provided (Page 2)
    1. A sample input PDF (e.g., sample.pdf) (Page 2)
    2. A sample ground truth output (sample.json) for format clarity (Page 2)
